<?xml version="1.0" encoding="UTF-8"?>
<flow id="5c699039-bcf5-4b3d-8759-d6b91b68d628">
  <descriptionCdata><![CDATA[5c699039-bcf5-4b3d-8759-d6b91b68d628.a95e9bbe-0e30-4d8d-9f18-904b3611167a.description=<pre>This is an operation that does nothing. It can be used for filtering flow variables by feeding them in as inputs and filtering them on the results tab.\n\nResponses\:\n    success\n    failure\n</pre>
]]></descriptionCdata>
  <annotation></annotation>
  <name>Unit Test - Get Error Message</name>
  <categories/>
  <inputs>
    <userInputBinding id="8586e5f5-493a-4f01-adf2-a3e09443a8b4">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>errorCode</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
  </inputs>
  <scriptlet id="f35d362c-ad0f-48a7-9494-bdb884b17a4f">
    <annotation></annotation>
    <name>Operation Unit Test - Get Error Message (5c699039-bcf5-4b3d-8759-d6b91b68d628)</name>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="7760545a-e3ba-43a8-b52d-83b6a850fd28">
      <annotation></annotation>
      <name>success</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="c57ae608-2548-42fd-9dc0-328041a0a292">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>false</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="b23800ee-4659-4766-a3e0-179b09dc8c4a">
    <annotation></annotation>
    <name>FailureMessage</name>
    <fieldName>FailureMessage</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="41aa8efd-6eae-46e8-90b0-faf94d26342b">
    <baseIcon>flow.png</baseIcon>
    <basePath>System</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <callouts/>
  <checkPointFlow>true</checkPointFlow>
  <compatibleRuntimeContext>false</compatibleRuntimeContext>
  <historyCheckPointFlow>true</historyCheckPointFlow>
  <steps>
    <step id="a95e9bbe-0e30-4d8d-9f18-904b3611167a">
      <annotation>5c699039-bcf5-4b3d-8759-d6b91b68d628.a95e9bbe-0e30-4d8d-9f18-904b3611167a.description</annotation>
      <name>Get Error Details</name>
      <bounds>
        <x>120.0</x>
        <y>60.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="d2e64935-71c5-4b07-8883-d30d983a5067">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>errorCode</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="70108938-e8e3-4bbd-8aae-788f79858da7">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>7341bb1b-550e-4924-9db4-32b0af878d12</refId>
          </destination>
          <source>
            <refId>a95e9bbe-0e30-4d8d-9f18-904b3611167a</refId>
          </source>
          <positions>
            <point>
              <x>110.0</x>
              <y>94.0</y>
            </point>
            <point>
              <x>350.0</x>
              <y>94.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="576454de-218a-4f74-8a8b-3dd701d30e35">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>2f15aead-c9de-44f8-9662-61154bd6d257</refId>
          </destination>
          <source>
            <refId>a95e9bbe-0e30-4d8d-9f18-904b3611167a</refId>
          </source>
          <positions>
            <point>
              <x>110.0</x>
              <y>94.0</y>
            </point>
            <point>
              <x>170.0</x>
              <y>274.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>03e8a2f0-aff1-466d-9ac2-e05695e1b9ed</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="029857a0-a7d2-440a-9d4b-600ca884871b">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>errorSeverity</contextKey>
          <expression id="61a4612f-e1f0-42b7-8c46-7993633a9837">
            <annotation></annotation>
            <name>Result Field: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters>
              <scriptletFilter id="3b749327-cd5b-4b2c-99f3-f5f2d5e51239">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="e17a9324-2c16-436d-9227-d36dc04b17c8">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

try{
	var JSONobj = JSON.parse(scriptletInput);
	scriptletResult = JSONobj.Domain;
}
catch (Exception){
	scriptletResult = Exception;
}</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="a1bb0500-e78d-4d0d-ada0-ea6b7e474aed">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>errorMsg</contextKey>
          <expression id="6a5128ef-dc8a-441a-a161-84e0f2cd849c">
            <annotation></annotation>
            <name>Result Field: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters>
              <scriptletFilter id="2b3f95f1-2d0a-4302-963e-c3bc53a60aa8">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="3e06498f-e39b-4b9f-af2b-8fe703e958c6">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

try{
	var JSONobj = JSON.parse(scriptletInput);
	scriptletResult = JSONobj.Msg;
}
catch (Exception){
	scriptletResult = Exception;
}</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="6ecd9aa0-8783-4514-9051-2aba444eba8f">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>erroDomain</contextKey>
          <expression id="5b364f90-6df2-4b0a-b1a2-cf3dda5318ca">
            <annotation></annotation>
            <name>Result Field: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters>
              <scriptletFilter id="8cddfbc4-b66e-4f1d-bbc1-3e12b2d3d1ee">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="27403917-dce0-4dc8-999e-55c5b2961e1a">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

try{
	var JSONobj = JSON.parse(scriptletInput);
	scriptletResult = JSONobj.Domain;
}
catch (Exception){
	scriptletResult = Exception;
}</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="7aa729fa-c5b3-47e3-a589-5df8ca5e5df6">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>errorDate</contextKey>
          <expression id="eff81da7-9917-4168-86b4-e6132c2b26ae">
            <annotation></annotation>
            <name>Result: errorDate</name>
            <fieldName>errorDate</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <returnStep id="2f15aead-c9de-44f8-9662-61154bd6d257">
      <annotation></annotation>
      <name>Error : failure</name>
      <bounds>
        <x>120.0</x>
        <y>240.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="5141774a-d643-4559-a1f1-2daa367e43a4">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>2f15aead-c9de-44f8-9662-61154bd6d257</refId>
          </destination>
          <source>
            <refId>2f15aead-c9de-44f8-9662-61154bd6d257</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>ERROR</returnStepType>
      <assignments/>
    </returnStep>
    <returnStep id="7341bb1b-550e-4924-9db4-32b0af878d12">
      <annotation></annotation>
      <name>Resolved : success</name>
      <bounds>
        <x>300.0</x>
        <y>60.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="339baec9-79ac-417e-a1db-0fbc32f0ee28">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>7341bb1b-550e-4924-9db4-32b0af878d12</refId>
          </destination>
          <source>
            <refId>7341bb1b-550e-4924-9db4-32b0af878d12</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>RESOLVED</returnStepType>
      <assignments/>
    </returnStep>
  </steps>
  <startSteps>a95e9bbe-0e30-4d8d-9f18-904b3611167a</startSteps>
</flow>